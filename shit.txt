blankity blank




				
				//printf("peek string: %c\n", peekString(operator_stack));
				// If the operator stack is empty
				if (peekString(operator_stack) != '\0') {
					printf("fired!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n");
					char temp[2] = "\0";
					temp[0] = **infix_stack;
					printf("character to post: |%s|", temp);
					//printf("pointer: %p", postfix_stack);
					printStack(postfix_stack);
					//push(postfix_stack, temp);
				}
				// Otherwise put the operator on the operator stack
				else {
					printf("fire 2\n");
					pushString(operator_stack, **infix_stack);
				}













// if the precedence of the operator is greater than the the top of the post_fix stack
			if (precedence(**infix_stack) > precedence(peepString(operator_stack))) {
				
				// Put the operator onto the operator_stack
				pushString(operator_stack, **infix_stack);
			}
			// Other wise we can pop the operator to the post_fix stack
			else {
				
				while (operator_stack && (precedence(**infix_stack) > precedence(peepString(operator_stack)))) {
					//push(postfix_stack
					char temp[2] = "\0";
					temp[0] = popString(operator_stack);
					push(postfix_stack, temp);

					// Put the operator onto the operator_stack
					pushString(operator_stack, **infix_stack);
				}
			}
			
			/*
			while (operator_stack && precedence(peepString(operator_stack)) >= (precedence(**infix_stack) )) {
				char temp[2] = "\0";
				temp[0] = popString(operator_stack);
				push(postfix_stack, temp);
			}
			pushString(operator_stack, **infix_stack);
			*/
			
			//pushString(operator_stack, **infix_stack);
			//printf("operators: %s\n", operator_stack);
			//printf("operator: %c\n", peepString(operator_stack));